name: memorypipeline-build

on:
  pull_request:
    branches: ["main"]
    paths:
      - "memorypipeline/**"
  workflow_call:
    outputs:
      artifact:
        description: "The name of the uploaded memory pipeline artifact."
        value: ${{jobs.memory-pipeline.outputs.artifact}}

permissions:
  contents: read

jobs:
  memory-pipeline:
    runs-on: windows-latest

    outputs:
      artifact: ${{steps.artifactoutput.outputs.artifactname}}

    steps:
      - uses: actions/checkout@v3
        with:
          clean: true

      - name: Set .Net Core version
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Package Copilot Chat Memory Pipeline
        run: |
          scripts\deploy\package-memorypipeline.ps1 -Configuration Release -DotnetFramework net6.0 -TargetRuntime win-x64 -OutputDirectory ${{ github.workspace }}\scripts\deploy

      - name: Check formatting of Copilot Chat Memory Pipeline
        run: |
          cd memorypipeline/
          dotnet format --verify-no-changes --verbosity diagnostic

      - name: Set version tag
        id: versiontag
        run: |
          $VERSION_TAG="$(Get-Date -Format "MMddHHmmss")"
          echo $VERSION_TAG
          Write-Output "versiontag=$VERSION_TAG" >> $env:GITHUB_OUTPUT

      - name: Upload package to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: copilotchat-memorypipeline-${{ steps.versiontag.outputs.versiontag }}
          path: ${{ github.workspace }}\scripts\deploy\out\memorypipeline.zip

      - name: "Set outputs"
        id: artifactoutput
        run: Write-Output "artifactname=copilotchat-memorypipeline-${{ steps.versiontag.outputs.versiontag }}" >> $env:GITHUB_OUTPUT
